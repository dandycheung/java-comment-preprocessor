[Scia Reto](https://sciareto.org) mind map   
> __version__=`1.1`,showJumps=`true`
---

# Java Comment Preprocessor<br/>v 7\.1\.0

## 
> fillColor=`#FFFFFF`,mmd.image=`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`


### goals
> fillColor=`#FF3700`,textColor=`#DBDBDB`


#### preprocess
> fillColor=`#FF3700`,textColor=`#DBDBDB`


##### sources
> fillColor=`#FFFF00`


###### Source root folders for preprocessing,<br/>if it is empty then project provided folders will be used\.
> fillColor=`#49EFB6`


####### \<sources\><br/>  \<src\>$\{basedir\}/src\</src\><br/>  \<src\>$\{basedir\}/res\</src\><br/>\</sources\>
> align=`left`,fillColor=`#FFB600`


##### eol
> fillColor=`#FFFF00`


###### End of line string to be used in reprocessed results\.<br/>It supports java escaping chars\.
> fillColor=`#49EFB6`


####### $\{line\.separator\}

######## \<eol\>\\r\\n\</eol\>
> fillColor=`#FFB600`


##### keepAttributes
> fillColor=`#FFFF00`


###### Keep attributes for preprocessing file<br/>and copy them to result one\.
> fillColor=`#49EFB6`


####### false

######## \<keepAttributes\>true\</keepAttributes\>
> fillColor=`#FFB600`


##### target
> fillColor=`#FFFF00`


######  Target folder to place preprocessing result<br/>in regular source processing phase\.
> fillColor=`#49EFB6`


####### \<target\>$\{project\.build\.directory\}/generated\-sources/preprocessed\</target\>
> fillColor=`#FFB600`


##### targetTest
> fillColor=`#FFFF00`


###### Target folder to place preprocessing result<br/>in test source processing phase\.
> fillColor=`#49EFB6`


####### \<targetTest\>$\{project\.build\.directory\}/generated\-test\-sources/preprocessed\</targetTest\>
> fillColor=`#FFB600`


##### sourceEncoding
> fillColor=`#FFFF00`


###### Encoding for text read operations\.
> fillColor=`#49EFB6`


####### UTF\-8

######## \<sourceEncoding\>US\-ASCII\</sourceEncoding\>
> fillColor=`#FFB600`


##### targetEncoding
> fillColor=`#FFFF00`


###### Encoding for text write operations\.
> fillColor=`#49EFB6`


####### UTF\-8

######## \<targetEncoding\>US\-ASCII\</targetEncoding\>
> fillColor=`#FFB600`


##### ignoreMissingSources
> fillColor=`#FFFF00`


###### Flag to ignore missing source folders,<br/>if false then mojo fail for any missing source folder,<br/>if true then missing folder will be ignored\.
> fillColor=`#49EFB6`


####### false

######## \<ignoreMissingSources\>true\</ignoreMissingSources\>
> fillColor=`#FFB600`


##### excludeExtensions
> fillColor=`#FFFF00`


###### List of file extensions to be excluded from preprocessing\.
> fillColor=`#49EFB6`


####### xml

######## \<excludeExtensions\><br/>  \<ext\>png\</ext\><br/>  \<ext\>xml\</ext\><br/>  \<ext\>txt\</ext\><br/>\</excludeExtensions\>
> align=`left`,fillColor=`#FFB600`


##### extensions
> fillColor=`#FFFF00`


######  List of file extensions to be included into preprocessing\.
> fillColor=`#49EFB6`


####### java, txt, htm, html

######## \<extensions\><br/>  \<ext\>cpp\</ext\><br/>  \<ext\>frt\</ext\><br/>\</extensions\>
> align=`left`,fillColor=`#FFB600`


##### unknownVarAsFalse
> fillColor=`#FFFF00`


######  Recognize a unknown variable as containing boolean FALSE flag\.
> fillColor=`#49EFB6`


####### false

######## \<unknownVarAsFalse\>true\</unknownVarAsFalse\>
> fillColor=`#FFB600`


##### dryRun
> fillColor=`#FFFF00`


###### Dry run, making preprocessing but without output
> fillColor=`#49EFB6`


####### false

######## \<dryRun\>true\</dryRun\>
> fillColor=`#FFB600`


##### verbose
> fillColor=`#FFFF00`


###### Verbose mode
> fillColor=`#49EFB6`


####### false

######## \<verbose\>true\</verbose\>
> fillColor=`#FFB600`


##### clearTarget
> fillColor=`#FFFF00`


###### Clear target folder if it exists\.
> fillColor=`#49EFB6`


####### false

######## \<clearTarget\>true\</clearTarget\>
> fillColor=`#FFB600`


##### baseDir
> fillColor=`#FFFF00`


###### Set base directory which will be used for relative source paths\.
> fillColor=`#49EFB6`


####### $\{project\.basedir\}

######## \<baseDir\>$\{project\.basedir\}/src\</baseDir\>
> fillColor=`#FFB600`


##### careForLastEol
> fillColor=`#FFFF00`


###### Carefully reproduce last EOL in result files\.
> fillColor=`#49EFB6`


####### false

######## \<careForLastEol\>true\</careForLastEol\>
> fillColor=`#FFB600`


##### replaceSources
> fillColor=`#FFFF00`


###### Replace source root folders in maven project<br/>after preprocessing for following processing\.
> fillColor=`#49EFB6`


####### true

######## \<replaceSources\>false\</replaceSources\>
> fillColor=`#FFB600`


##### keepComments
> fillColor=`#FFFF00`


###### Keep comments in result files\.
> fillColor=`#49EFB6`


####### true

######## \<keepComments\>REMOVE\_JCP\_ONLY\</keepComments\>
> fillColor=`#FFB600`


##### vars
> fillColor=`#FFFF00`


###### List of variables to be registered<br/>in preprocessor as global ones\.
> fillColor=`#49EFB6`


####### \<vars\><br/>    \<glob\_var1\>SOME TEXT\</glob\_var1\><br/>    \<glob\_var2\>12345\</glob\_var2\><br/>\</vars\>
> align=`left`,fillColor=`#FFB600`


##### excludeFolders
> fillColor=`#FFFF00`


###### List of patterns of folder paths to be excluded from preprocessing,<br/>It uses ANT path pattern format\.
> fillColor=`#49EFB6`


####### \<excludeFolders\><br/>   \<folder\>\*\*/folder1\</folder\><br/>   \<folder\>/some/\*\*/folder2\</folder\><br/>\</excludeFolder\>
> align=`left`,fillColor=`#FFB600`


##### configFiles
> fillColor=`#FFFF00`


###### List of external files containing variable definitions\.
> fillColor=`#49EFB6`


####### \<configFiles\><br/>  \<file\>$\{basedir\}/config1\.txt\</file\><br/>  \<file\>$\{basedir\}/config2\.txt\</file\><br/>\</configFiles\>
> align=`left`,fillColor=`#FFB600`


##### keepLines
> fillColor=`#FFFF00`


###### Keep preprocessing directives in result files as commented ones,<br/>it is useful to not break line numeration in result files\.
> fillColor=`#49EFB6`


####### true

######## \<keepLines\>false\</keepLines\>
> fillColor=`#FFB600`


##### allowWhitespaces
> fillColor=`#FFFF00`


###### Turn on support of white spaces<br/>in preprocessor directives between '//' and the '\#'\.
> fillColor=`#49EFB6`


####### false

######## \<allowWhitespaces\>true\</allowWhitespaces\>
> fillColor=`#FFB600`


##### preserveIndents
> fillColor=`#FFFF00`


###### Preserve indents in lines marked by '//$' and '//$$' directives\.<br/>Directives will be replaced by white spaces chars\.
> fillColor=`#49EFB6`


####### false

######## \<preserveIndents\>true\</preserveIndents\>
> fillColor=`#FFB600`


##### useTestSources
> fillColor=`#FFFF00`


###### Turn on test sources root use\.
> fillColor=`#49EFB6`


####### false

######## \<useTestSources\>true\</useTestSources\>
> fillColor=`#FFB600`


##### skip
> fillColor=`#FFFF00`


###### Skip preprocessing\.
> fillColor=`#49EFB6`


####### false

######## \<skip\>true\</skip\>
> fillColor=`#FFB600`


####### activated by

######## jcp\.preprocess\.skip
> fillColor=`#FFB600`


##### dontOverwriteSameContent
> fillColor=`#FFFF00`


###### Turn on check of content body compare with existing result file to prevent overwriting,<br/>if content is the same then preprocessor will not be writing new result content\.
> fillColor=`#49EFB6`


####### false

######## \<dontOverwriteSameContent\>true\</dontOverwriteSameContent\>
> fillColor=`#FFB600`


## 
> fillColor=`#FFFFFF`,mmd.image=`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`


### tasks
> fillColor=`#FF00FF`


#### preprocess
> fillColor=`#FF00FF`


##### sources
> fillColor=`#FFFF00`


###### paths

####### path

######## \<sources\><br/>   \<path\>\./src\</path\><br/>\</sources\>
> align=`left`,fillColor=`#FFB600`


##### eol
> fillColor=`#FFFF00`


###### eol="\\r\\n"
> fillColor=`#FFB600`


##### keepAttributes
> fillColor=`#FFFF00`


###### keepAttributes="true"
> fillColor=`#FFB600`


##### target
> fillColor=`#FFFF00`


###### target="$\{jcp\.target\.folder\}"
> fillColor=`#FFB600`


##### sourceEncoding
> fillColor=`#FFFF00`


###### sourceEncoding="UTF\-8"
> fillColor=`#FFB600`


##### targetEncoding
> fillColor=`#FFFF00`


###### targetEncoding="UTF\-8"
> fillColor=`#FFB600`


##### ignoreMissingSources
> fillColor=`#FFFF00`


###### ignoreMissingSources="false"
> fillColor=`#FFB600`


##### excludeExtensions
> fillColor=`#FFFF00`


###### extension
> fillColor=`#FFDB00`


####### \<excludeExtensions\><br/>   \<extension\>cpp\</extension\><br/>   \<extension\>xml\</extension\><br/>\</excludeExtensions\>
> align=`left`,fillColor=`#FFB600`


##### extensions
> fillColor=`#FFFF00`


###### extension
> fillColor=`#FFDB00`


####### \<extensions\><br/>   \<extension\>java\</extension\><br/>\</extensions\>
> align=`left`,fillColor=`#FFB600`


##### unknownVarAsFalse
> fillColor=`#FFFF00`


###### unknownVarAsFalse="true"
> fillColor=`#FFB600`


##### dryRun
> fillColor=`#FFFF00`


###### dryRun="false"
> fillColor=`#FFB600`


##### verbose
> fillColor=`#FFFF00`


###### verbose="true"
> fillColor=`#FFB600`


##### clearTarget
> fillColor=`#FFFF00`


###### clearTarget="true"
> fillColor=`#FFB600`


##### careForLastEol
> fillColor=`#FFFF00`


###### careForLastEol="true"
> fillColor=`#FFB600`


##### keepComments
> fillColor=`#FFFF00`


###### keepComments="REMOVE\_JCP\_ONLY"
> fillColor=`#FFB600`


##### vars
> fillColor=`#FFFF00`


###### var

####### \<vars\><br/>   \<var name="globalvar"\>antdefined\</var\><br/>\</vars\>
> align=`left`,fillColor=`#FFB600`


##### excludeFolders
> fillColor=`#FFFF00`


###### folder

#######  \<excludeFolders\><br/>   \<folder\>\*\*/excluded1\</folder\><br/>   \<folder\>\*\*/excluded2\</folder\><br/>\</excludeFolders\>
> align=`left`,fillColor=`#FFB600`


##### configFiles
> fillColor=`#FFFF00`


###### paths

####### path

######## \<configFiles\><br/>   \<path\>\./config\.cfg\</path\><br/>\</configFiles\>
> align=`left`,fillColor=`#FFB600`


##### keepLines
> fillColor=`#FFFF00`


###### keepLines="true"
> fillColor=`#FFB600`


##### allowWhitespaces
> fillColor=`#FFFF00`


###### allowWhiteSpaces="true"
> fillColor=`#FFB600`


##### preserveIndents
> fillColor=`#FFFF00`


###### preserveIndents="true"
> fillColor=`#FFB600`


##### dontOverwriteSameContent
> fillColor=`#FFFF00`


###### dontOverwriteSameContent="true"
> fillColor=`#FFB600`


## 
> fillColor=`#FFFFFF`,mmd.image=`iVBORw0KGgoAAAANSUhEUgAAAKwAAAAwCAYAAACMlZHgAAAL2klEQVR42u2dCZAWxRXH9yAuYXddYCFAEOQQDUmQc48Zli1RCWUOAaMRE9AyGMTdnYHlDtFSUSHImooXIlki0SRUzFGxkiorIEVhtEyElMGgQU0CiBhEFANIybl5r6fnm+Pra47v4yPpqfrXbrE9Pd3Tv37z+vWboago7mGb7s8uoAGgBlAraB1oI2gbaCvoZdDToBWga0FDQT2K9KGPvB+2eR9oB+gIqCOC9oA2gKZmTQB96COHwE6KCCpLH4GuAZXpG3pWxrAE1BXU3afqItsoDZSzSLnqUDlU6bnSUffnhhSg7aCWeqq2tnkfx96gndRwuDoNwF4aAnYg/PuZULn3QcMKqj+zXry4GCXo8HjQyZSgRT2embUa3HwA2we0L3scjJEhYAczxuo4aEShgOr+XAaaJOn0b1IEtoMu1AZqaPNmYfee08D6YH0E1AF6BdTF/XeGW4A6kTK07xOfSUOrgVWE1oXV1VQ/zAxom1MGFnUINFhTpYGVWdaFIVhRx4ULMNvsDBoFqokgjA4cVViMlWsrq4HlwTqSAaurp3Jww36pYGmf0mRpYFnQop96RADsx6ChWW5Bsht2nqJ70Krp0sBmrCvVKgGsrh5L8Wa5P29SAHY/qFdqroGlUM+smGPRUs/va6z7ZKTXjnMBWMtQArYrtaAiWE+Crkp5hrv+7w4FaJckHvxmuBmtY53fbyPW/XpQG+hJUDtoMfHF3WNOY5K+TaI5FPez/z7OXxZzMe4A/Rj0E9D3nfPdv0Ob7fp4g26btaDvgtbSfmLdV9O/VeUNWP+42eZo0CLa31+AHgPdAu2uEoLr810fVrCuf4rUqCjWxTa/oegaFKdg0XFL8VEFi341cVlU+tDa4K97Waiuf7LbYeBEvVkhF+MuUIVSO9xBdlytr9HwoKjuVaD3cgqsd98/RSfxu5I2PQ396M8FF0CsVIAVNVAZVNv8NKhnJHBt8w8KwC6NCWsx/XkL3VZUDa09D+qvCMk09q6R+RajPcNB2yO0Awf5y8L76LbDMi6AMn9MFlJMCVgP1r6glyK04WPuWAOI8xVgXSqJw6K60Rl7PHTxP4OuDJRldw6t0yeSjrwD6hQT2rkxB3AfQNCb6U96lnU63Wvv4ALr9tsCGOT95OkGoQ9uGXgPjyWPgacArFXn3psBCdqyGnzxEj+sJaDnJbC+S31ckU/SpnBxBPdSjkV2rKBt/kBh5o2K7MfiQDvnn4l547ZzF0O2WSc591++dpTTSRd3AE+SGDarLc6E353Kpo1l1iUGdnYDTiB80r6RsD0zM4wAhJ8BvS0Bdr4Ehm0RG9AgqKvCyRYSnj8t4qKujPOodoXXe436raLrrsmuvxb9ssOS8zb52rNFIVd4p2RivcqZ9PdK6sbF1d8VgTUSAduSmcz3SJ6Wi0mWnm0+JBn3fq6FHQI6LYD1LYlvsizGjHmb5GDy6/ym5Py1arDWu/XN59Szi1wr2Ia+dMXKKv8B6IKAW8DfkkY/+dZMn2bjKt+sF0yY5cRCZga8DvNPZ7EXRETXBaMfZM3Au18Pk/BVsJ/owhzIGbDOORWc+o8z4+p2fRl9Y4V1znoX2AkS63oJ03d1On1+AjO/UhBVQNdgImgKQ9eQgY/mDpzgLGL6B2KWrQ3+cxZw2j3FV6aUu1C0fDkQ2Ees3wlxseqcEXiMBge9huOThiMPSzh1NwUWZf7JZhk9uJY8DWD5a4bbGRET/3lrOMalB4LYIoD1V6BS7s6WbT6YyDdJY9NBXm445/qLFSIKrzDO+5EzgLVu6OgQo8ycrIWRA/dmRtnNmTgrvz2PM87DHIzP+sqw/MR/kDay4pleZOPGHAL7LOfef52GDFnCsNdXGYtSfApdgsDeKwB2kMQdOJLQmU53E0K82AoPSLXCuQuYubreI4z1yDvGzDDDyAZ7QTTRsfBjRDtdfRnnfZJZfF03qJguRtlPMW69xE0ZxJx0iX1Y0t9tRelm712BwK7mwHon1xXwgsBJG7AgD8DOimXdyeOT+HnZjyavTD/OhkMfDrAHGeW/KN2KdM4Pn4duzuV04pRz3IabFertxd7pCi2MowLrxOG3pwqsBcZHAOwECbCdUmjE/DwAO41z7QqFc2czznvDtxJmxRf/LQCWBcZ4hZyA7hxYnH3jpjGlHGCXKkzK/uzFlzGcEd9lhdiu5DwV0KD9JWULe73IJTgaY9ZH1fQ8AFsrjO21hKxbMyyOVk13z31OaGGjAYtQvcAo/3Np0ott3i0E1imzhzu5RNvl6Jax7k8zAKc23isE19jIKH8KnggjoG81EQXjWF+FwFoCH/Y+iQ+7KSGwPZNkmEWA9jQTPMuo4GZD2eZt3FBYLGAN9DN/yKnz2uyNmAysgzhxXgfY5tFuueVsOKhRYC3qnE2M/cyk+bkN3mRuzoQHf8tph7MrNrcxXP8iTn+/lSS18HIBsAdA1YKw1qgEsG5izUxfMs400P0MrQTdqtS5pszW4Ep+kN7o41i/+mL6jn4ZxxVg+bB9lIF12jGBQsTyR6eQdYFllDhhvbHQJmOwIFaKoFzmcxsqBW2eAf0rceomE6cTWRjyN0ruZvrVuOjhX2MyjZqU+gxaV05ZXKx/AfpYnD2pjXLhtw7oxsEpAbTrJDkEz8aAFW/25wWZY0MkseE1Ed2CKk74ydVzNLXwpwo7Qbt8N7hXJGCdtmwV1P1Xmv63libdiNrhLbq8ENUqQfmdtH/t9Ml4WrD1eyHH38XPUr0uuMZrNIZa6eNjuaD8r0EWDWfdSFMNj1FLzn5rmm7N7pUAMk4wABfGeGP2TlEsFa63S9KeG2KkFM5NyfH3A9tbGVgrk/hSybGyUeUB6/UVs7Q+TJj08h3J/RwjqWN35m1nb3NJlktwhtO/LzkJRuOKwskvWySAvAwqE1jZoWR/W+0mL5K4KDMkbTlK3zuLswBbnQdg3wsE9NnB+okpQJsNrFP3uATx8TZnt80UT36LJL2fUgLWg/yDmG26vaiptjgMyUKF9MKJCsm5LYJHzYbAVijDd6WT4k1JO97BSRYJVA+UEsFCIC1gD5B8BLnFH8ZIw0wG7Oyxbt0Xc2K+Isvq7PzNGy9+NcjKtP8yJWDXT3fP60Hdkih9/BuM3fksq9ZFAdiDkk8W+X83Qd+myR+TSZ6sYEtV8no5My831uGB20i3SUV5o/gYezEGsIeEwAahRffgCUkm2UES+mInzFyRvdCs8b9x8Agn3OXf3t1ALCAvWiJsP9npaw9dY1/W51Sbab33jHVDdLJ1ws7Ak9i/AIz4ikx7rvb+cRtY5a2HxHHZjBUyOtHvSuHe9QMkG8iBZx61flV00mXvz3vAVtJMqJU+3UXOlU6ewARH62PQd7qepIAuo98t60nLvEAXuK5+R/Ik5MajG9mNcp4s62g/2+hCpy95MkbJzQiH3Zxzq0mesxMKXETCZeI24X27iJZvp33B1/2/R9taFUhKYlk4UDfQMQkwh0GfSzOuT6+NH5z7vQKwSyLHYFUsLn+SseKmWwKpi6lsbhjiFMk543PXx1QGMeKLs5bk3jXVKEGDelABmp+lCo1T1wjQGcl194N6pvpNBFHi8cxRJZyEkhVF+iiMg/qyhxWgHZ3ydXcoXLMlZx1vHhO2Sp1pTJTlXzVqUgoDVvfnSAV4doM6p2HtFBdaa3N+A6y6Urq6tkFv8t+UQL+1TgNTKNBSLZQ8ovFvM6lFLk+gAaB9ElhfpWVz23nbGKIQZrlJU1K48LZJQDoB+jChZO7HXm4SefrAXiSB9SFSbk6DhqOA3YMHFD+wkQshrJVpL/BiAvsMSRjJx4pbH4mhveMswPoSugt5g5UP7CHhu1/6KFh4axVitGkJQ2vn5RXWbB/2P2QP2zLK8xrP1EeqlrY7aD1+iTtHoGJoa3LeQfWA7UL25sPf0dKgntPQovrh5kGKoOKGwFcwTHbWYGW9sapB/d8Bl/7ej/7HHa+DPooAKH5jdg9oo2tRzxqo+vi/hBg3EAaDGkHzQE+ANoG2Upg3g56h/9/XFNAw3GLVd04f+tCHPvShj0I6/gtjopxeR4k2EgAAAABJRU5ErkJggg==`


### plug\-in
> fillColor=`#12ED12`


#### com\.igormaznitsa\.jcp
> fillColor=`#12ED12`


##### task
> fillColor=`#12ED12`


###### preprocess

####### sources
> fillColor=`#FFFF00`


######## sources = \['src/main/java'\]
> fillColor=`#FFC800`


####### eol
> fillColor=`#FFFF00`


######## eol = '\\r\\n'
> fillColor=`#FFC800`


####### keepAttributes
> fillColor=`#FFFF00`


######## keepAttributes=true
> fillColor=`#FFC800`


####### target
> fillColor=`#FFFF00`


######## target = file\('build/preprocessed/java'\)
> fillColor=`#FFC800`


####### sourceEncoding
> fillColor=`#FFFF00`


######## sourceEncoding='UTF\-8'
> fillColor=`#FFC800`


####### targetEncoding
> fillColor=`#FFFF00`


######## targetEncoding='UTF\-8'
> fillColor=`#FFC800`


####### ignoreMissingSources
> fillColor=`#FFFF00`


######## ignoreMissingSources=false
> fillColor=`#FFC800`


####### excludeExtensions
> fillColor=`#FFFF00`


######## excludeExtensions=\['txt','xml'\]
> fillColor=`#FFC800`


####### extensions
> fillColor=`#FFFF00`


######## extensions=\['java'\]
> fillColor=`#FFC800`


####### unknownVarAsFalse
> fillColor=`#FFFF00`


######## unknownVarAsFalse=false
> fillColor=`#FFC800`


####### dryRun
> fillColor=`#FFFF00`


######## dryRun=false
> fillColor=`#FFC800`


####### verbose
> fillColor=`#FFFF00`


######## verbose=true
> fillColor=`#FFC800`


####### clearTarget
> fillColor=`#FFFF00`


######## clearTarget=true
> fillColor=`#FFC800`


####### baseDir
> fillColor=`#FFFF00`


######## baseDir = file\('build/someBase'\)
> fillColor=`#FFC800`


####### careForLastEol
> fillColor=`#FFFF00`


######## careForLastEol=true
> fillColor=`#FFC800`


####### keepComments
> fillColor=`#FFFF00`


######## keepComments='keep\_all'
> fillColor=`#FFC800`


####### vars
> fillColor=`#FFFF00`


######## vars = \['someVar': 'Some Test Value'\]
> fillColor=`#FFC800`


####### excludeFolders
> fillColor=`#FFFF00`


######## excludeFolders=\['\*\*/some1','\*\*/some2'\]
> fillColor=`#FFC800`


####### configFiles
> fillColor=`#FFFF00`


######## configFiles=\['\./configFile\.txt'\]
> fillColor=`#FFC800`


####### keepLines
> fillColor=`#FFFF00`


######## keepLines=true
> fillColor=`#FFC800`


####### allowWhitespaces
> fillColor=`#FFFF00`


######## allowWhitespaces=true
> fillColor=`#FFC800`


####### preserveIndents
> fillColor=`#FFFF00`


######## preserveIndents=true
> fillColor=`#FFC800`


####### skip
> fillColor=`#FFFF00`


######## skip=true
> fillColor=`#FFC800`


####### dontOverwriteSameContent
> fillColor=`#FFFF00`


######## dontOverwriteSameContent=false
> fillColor=`#FFC800`


####### outcomingFiles
> fillColor=`#00A4FF`


######## read only
> fillColor=`#FF71CC`


######### set of files touched during preprocessing
> fillColor=`#FFFF00`


####### incomingFiles
> fillColor=`#00A4FF`


######## read only
> fillColor=`#FF71CC`


######### set of generated result files
> fillColor=`#FFFF00`


## External config files
> fillColor=`#00B6FF`


### multi\-line text files
> fillColor=`#00B6FF`


#### line starts with
> fillColor=`#00B6FF`


##### /

###### can contain CLi key
> fillColor=`#49EFB6`


####### /V

##### \#
> leftSide=`true`


###### recognized as comment
> fillColor=`#49EFB6`


####### \# some ignored comment

##### @

###### throws preprocessor error
> fillColor=`#49EFB6`


####### @ error string

##### any other non\-empty

###### interpret as global variable definition
> fillColor=`#49EFB6`


####### \<VAR NAME\>=\<EXPRESSION\>

######## globalVar="Hello world"
> fillColor=`#FFC800`


#### empty line
> fillColor=`#00B6FF`


##### ignored
> fillColor=`#49EFB6`


## Command Line
> fillColor=`#00DBFF`,leftSide=`true`


### /H,/h,/?,\-H\.\-?
> fillColor=`#00DBFF`


#### print help information
> fillColor=`#49EFB6`


### /T:
> fillColor=`#00DBFF`,leftSide=`true`


#### set input encoding
> fillColor=`#49EFB6`


##### /T:UTF\-8
> fillColor=`#FFC800`


### /TT:
> fillColor=`#00DBFF`


#### set output encoding
> fillColor=`#49EFB6`


##### /TT:UTF\-8
> fillColor=`#FFC800`


### /C
> fillColor=`#00DBFF`,leftSide=`true`


#### clear target folder before preprocessing
> fillColor=`#49EFB6`


### /I:
> fillColor=`#00DBFF`,leftSide=`true`


#### define source folder for preprocessing
> fillColor=`#49EFB6`


##### /I:\./src
> fillColor=`#FFC800`


### /O:
> fillColor=`#00DBFF`,leftSide=`true`


#### define result folder
> fillColor=`#49EFB6`


##### /O:\./preprocess
> fillColor=`#FFC800`


### /F:
> fillColor=`#00DBFF`,leftSide=`true`


#### comma separated list of preprocessed extensions
> fillColor=`#49EFB6`


##### /F:java,txt,html
> fillColor=`#FFC800`


### /EF:
> fillColor=`#00DBFF`,leftSide=`true`


#### comma separated list of excluded extensions
> fillColor=`#49EFB6`


##### /EF:xml,png
> fillColor=`#FFC800`


### /ES
> fillColor=`#00DBFF`,leftSide=`true`


#### turn on support of white spaces betwee // and \# in directives
> fillColor=`#49EFB6`


### /R
> fillColor=`#00DBFF`,leftSide=`true`


#### remove all Java like comments from result files
> fillColor=`#49EFB6`


### /K
> fillColor=`#00DBFF`,leftSide=`true`


#### prevent line numeration in result files
> fillColor=`#49EFB6`


### /Z
> fillColor=`#00DBFF`,leftSide=`true`


#### disable override result file if exists and has same content
> fillColor=`#49EFB6`


### /V
> fillColor=`#00DBFF`,leftSide=`true`


#### turn on verbose mode
> fillColor=`#49EFB6`


### @\<file\_name\>
> fillColor=`#00DBFF`,leftSide=`true`


#### read global variables from a file
> fillColor=`#49EFB6`


### @@\<expression\>
> fillColor=`#00DBFF`,leftSide=`true`


#### read global variables from file which path defined by expression
> fillColor=`#49EFB6`


### /P:
> fillColor=`#00DBFF`,leftSide=`true`


#### define global variable value
> fillColor=`#49EFB6`


##### /P:DEBUG=true
> fillColor=`#FFC800`


### /N
> fillColor=`#00DBFF`,leftSide=`true`


#### carefully reproduce last EOL in result file
> fillColor=`#49EFB6`


### /PI
> fillColor=`#00DBFF`,leftSide=`true`


#### turn on indent preserving for //$ and //$$ directives
> fillColor=`#49EFB6`


### /ED:
> fillColor=`#00DBFF`,leftSide=`true`


#### folders to be excluded from preprocessing<br/>ANT matcher is allowed, system path separator as delimiter
> fillColor=`#49EFB6`


##### /ED:/\*\*/test:/\*\*/test\*/some
> fillColor=`#FFC800`


### /A
> fillColor=`#00DBFF`,leftSide=`true`


#### keep original source attributes for result files
> fillColor=`#49EFB6`


### /U
> fillColor=`#00DBFF`,leftSide=`true`


#### turn on FALSE as unknown variable value
> fillColor=`#49EFB6`


### /M:
> fillColor=`#00DBFF`,leftSide=`true`


#### allows select keep comment processor<br/>to remove selected kind of commented lines
> fillColor=`#49EFB6`


##### /M:remove\_jcp\_only
> fillColor=`#FFC800`


##### allowed values
> fillColor=`#FFCC71`


###### true
> fillColor=`#FFCC71`


####### same as keep\_all
> fillColor=`#49EFB6`,topicLinkUID=`18C52A4D054A`

- TOPIC
<pre>18C52A4EDD2A</pre>

###### false
> fillColor=`#FFCC71`


####### same as remove\_c\_style
> fillColor=`#49EFB6`

- TOPIC
<pre>18C52A5933DA</pre>

###### keep\_all
> fillColor=`#FFCC71`,topicLinkUID=`18C52A4EDD2A`


####### to not remove comments
> fillColor=`#49EFB6`


###### remove\_c\_style
> fillColor=`#FFCC71`,topicLinkUID=`18C52A5933DA`


####### remove all comments in C style
> fillColor=`#49EFB6`


###### remove\_jcp\_only
> fillColor=`#FFCC71`


####### remove only comment lines related to JCP
> fillColor=`#49EFB6`


## DSL
> leftSide=`true`


### Directives
> fillColor=`#00FFFF`


#### //\#local \<var name\>=\<expression\>
> fillColor=`#00FFFF`


##### define local variable
> fillColor=`#49EFB6`


###### //\#local somevar="Hello world"
> fillColor=`#FFC800`


#### //\#if \<bool expression\>\.\.//\#else\.\.//\#endif
> fillColor=`#00FFFF`


##### conditional execution<br/>needs boolean expression
> fillColor=`#49EFB6`


###### //\#if boovar<br/>\.\.\.<br/>//\#else<br/>\.\.\.<br/>//\#endif
> align=`left`,fillColor=`#FFC800`


#### //\#ifdefined \<variable name\>\.\.\.//\#else\.\.//\#endif
> fillColor=`#00FFFF`,leftSide=`true`


##### conditional execution<br/>checks that a variable is defined
> fillColor=`#49EFB6`


###### //\#ifdefined <br/>\.\.\.<br/>//\#else<br/>\.\.\.<br/>//\#endif
> align=`left`,fillColor=`#FFC800`


##### //\#ifdef\.\.\.//\#else\.\.\.//\#endif
> fillColor=`#FFDB00`


#### //\#ifndef \<variable name\>\.\.//\#else\.\.//\#endif
> fillColor=`#00FFFF`,leftSide=`true`


##### conditional execution<br/>checks that a variable is not defined
> fillColor=`#49EFB6`


###### //\#ifndef  svar<br/>\.\.\.<br/>//\#else<br/>\.\.\.<br/>//\#endif
> align=`left`,fillColor=`#FFC800`


#### //\#while \<bool expression\>\.\.//\#break\.\.//\#continue\.\.//\#end
> fillColor=`#00FFFF`,leftSide=`true`


##### conditional execution<br/>while expression result is TRUE
> fillColor=`#49EFB6`


###### //\#while a\>0<br/>\.\.\.<br/>//\#break<br/>\.\.\.<br/>//\#continue<br/>\.\.\.<br/>//\#end
> align=`left`,fillColor=`#FFC800`


#### //\#exitif \<bool expression\>
> fillColor=`#00FFFF`,leftSide=`true`


##### conditional end of current file preprocessing<br/>return to calling file if presented
> fillColor=`#49EFB6`


###### //\#exitif avar="hello"
> fillColor=`#FFC800`


#### //\#exit
> fillColor=`#00FFFF`,leftSide=`true`


##### end of current file preprocessing<br/>return to calling file if presented
> fillColor=`#49EFB6`


#### //\#outdir \<str expression\>
> fillColor=`#00FFFF`,leftSide=`true`


##### set output directory for preprocessing file
> fillColor=`#49EFB6`


###### //\#outdir "some/folder"
> fillColor=`#FFC800`


#### //\#\[\+|\-\]
> fillColor=`#00FFFF`,leftSide=`true`


##### turn on \(\+\) and turn off \(\-\) preprocessing
> fillColor=`#49EFB6`


###### preprocessed<br/>//\#\-<br/>non preprocessed<br/>//\#\+<br/>preprocessed
> align=`left`,fillColor=`#FFC800`


#### //\#outname \<str expression\>
> fillColor=`#00FFFF`,leftSide=`true`


##### set result name for preprocessing file
> fillColor=`#49EFB6`


###### //\#outname "some\.java"
> fillColor=`#FFC800`


#### //\#//
> fillColor=`#00FFFF`,leftSide=`true`


##### comment next line
> fillColor=`#49EFB6`


###### //\#//<br/>line to be commented
> align=`left`,fillColor=`#FFC800`


#### //\#definel \<var name\>
> fillColor=`#00FFFF`,leftSide=`true`


##### define a local boolean variable as TRUE
> fillColor=`#49EFB6`


###### //\#definel newvar
> fillColor=`#FFC800`


#### //\#define \<var name\>
> fillColor=`#00FFFF`,leftSide=`true`


##### define a global boolean variable as TRUE
> fillColor=`#49EFB6`


###### //\#define newglobal
> fillColor=`#FFC800`


#### //\#undef \<var name\>
> fillColor=`#00FFFF`,leftSide=`true`


##### remove variable if exists
> fillColor=`#49EFB6`


###### //\#undef newvar
> fillColor=`#FFC800`


#### //\#flush
> fillColor=`#00FFFF`,leftSide=`true`


##### force flushing of current buffer states to disk<br/>and clear internal buffers
> fillColor=`#49EFB6`


#### //\#include \<str expression\>
> fillColor=`#00FFFF`,leftSide=`true`


##### include preprocess result of defined file into position
> fillColor=`#49EFB6`


###### //\#include "some\.java"
> fillColor=`#FFC800`


#### //\#action
> fillColor=`#00FFFF`,leftSide=`true`


##### make call to user extension<br/>with comma separated arguments
> fillColor=`#49EFB6`


###### //\#action 1000,"hello",123
> fillColor=`#FFC800`


#### //\#postfix\[\+|\-\]
> fillColor=`#00FFFF`,leftSide=`true`


##### turn on \(\+\) or turn off \(\-\) output into postfix section
> fillColor=`#49EFB6`


###### some text<br/>//\#postfix\+<br/>it will be in the end<br/>//\#postfix\-<br/>other text
> align=`left`,fillColor=`#FFC800`


#### //\#prefix\[\+|\-\]
> fillColor=`#00FFFF`,leftSide=`true`


##### turn on \(\+\) or turn off \(\-\) output into prefix section
> fillColor=`#49EFB6`


###### some text<br/>//\#prefix\+<br/>it will be in the beginning<br/>//\#prefix\-<br/>other text
> align=`left`,fillColor=`#FFC800`


#### //\#global \<var name\>=\<expression\>
> fillColor=`#00FFFF`,leftSide=`true`


##### define a global variable value
> fillColor=`#49EFB6`


###### //\#global debug=true
> fillColor=`#FFC800`


#### //\#\_if\.\.//\#\_else\.\.//\#\_endif
> fillColor=`#00FFFF`,leftSide=`true`


##### special condition to be checked during 1st preprocessing pass<br/>works with global variables
> fillColor=`#49EFB6`


###### //\#\_if debug<br/>\.\.\.<br/>//\#\_else<br/>\.\.\.<br/>//\#\_endif
> align=`left`,fillColor=`#FFC800`


#### //\#excludeif \<bool expression\>
> fillColor=`#00FFFF`,leftSide=`true`


##### exclude file from preprocessing<br/>if boolean expression returns true
> fillColor=`#49EFB6`


###### //\#excludeif debug
> fillColor=`#FFC800`


#### //\#error \<text\>
> fillColor=`#00FFFF`,leftSide=`true`


##### stop work and generate exception with notification<br/>macroses allowed
> fillColor=`#49EFB6`


###### //\#error unexpected value /\*$var1$\*/
> fillColor=`#FFC800`


#### //\#warning \<text\>
> fillColor=`#00FFFF`,leftSide=`true`


##### log text as warning<br/>macroses allowed
> fillColor=`#49EFB6`


###### //\#warning be careful with /\*$var4$\*/
> fillColor=`#FFC800`


#### //\#echo \<text\>
> fillColor=`#00FFFF`,leftSide=`true`


##### log text as info<br/>macroses allowed
> fillColor=`#49EFB6`


###### //\#echo the line /\*$\_\_line\_\_$\*/
> fillColor=`#FFC800`


#### //\#msg \<text\>
> fillColor=`#00FFFF`,leftSide=`true`


##### log text as info<br/>macroses allowed, if verbose mode then stack will be printed
> fillColor=`#49EFB6`


###### //\#msg some info
> fillColor=`#FFC800`


#### //\#noautoflush
> fillColor=`#00FFFF`,leftSide=`true`


##### turn off autoflush for EOF
> fillColor=`#49EFB6`


#### //\#abort \<text\>
> fillColor=`#00FFFF`,leftSide=`true`


##### abort preprocessing and show message<br/>macroses allowed
> fillColor=`#49EFB6`


###### //\#abort thats all\!
> fillColor=`#FFC800`


#### //$
> fillColor=`#00FFFF`,leftSide=`true`


##### remove comment and print result with macross processing
> fillColor=`#49EFB6`


###### //$ some line with /\*$var$\*/
> fillColor=`#FFC800`


#### //$$
> fillColor=`#00FFFF`,leftSide=`true`


##### remove comment and print result, macroses ignored
> fillColor=`#49EFB6`


###### //$$ some line with /\*$nonprocessed macroses$\*/
> fillColor=`#FFC800`


#### /\*\-\*/
> fillColor=`#00FFFF`,leftSide=`true`


##### drop tail of line
> fillColor=`#49EFB6`


###### some line/\*\-\*/dropped part
> fillColor=`#FFC800`


### Data types
> fillColor=`#FFC800`,leftSide=`true`


#### boolean
> fillColor=`#FFC800`


##### true
> fillColor=`#FFC800`


##### false
> fillColor=`#FFC800`,leftSide=`true`


#### integer
> fillColor=`#FFC800`,leftSide=`true`


##### signed 64 bit

###### 234567, 0x56FE
> fillColor=`#FFC800`


#### float
> fillColor=`#FFC800`,leftSide=`true`


##### signed 32 bit

###### 0\.745
> fillColor=`#FFC800`


#### string
> fillColor=`#FFC800`,leftSide=`true`


##### "hello world"
> fillColor=`#FFC800`


### Operators
> fillColor=`#FFFF00`,leftSide=`true`


#### ==, \>, \>=, \<, \<=, \!= 
> fillColor=`#FFFF00`


#### \+,\-,\*,/,%
> fillColor=`#FFFF00`,leftSide=`true`


#### \!, &&, ||, ^
> fillColor=`#FFFF00`,leftSide=`true`


### Functions
> fillColor=`#FFC67D`,leftSide=`true`


#### INT|FLOAT abs\(INT|FLOAT\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


#### INT round\(INT|FLOAT\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


#### BOOL is\(STR,ANY\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


#### STR evalfile\(STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


#### STR binfile\(STR, STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


#### string processing
> fillColor=`#FFCC71`


##### BOOL issubstr\(STR,STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### INT strlen\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR trimlines\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR esc\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### INT str2int\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2web\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2csv\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2js\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2json\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2xml\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2java\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### STR str2go\(STR\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


#### xml functions
> fillColor=`#FFCC71`,leftSide=`true`


##### STR xml\_get\(STR, INT\)
> fillColor=`#00B6FF`,textColor=`#FFFFFF`


##### INT xml\_size\(STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_attr\(STR, STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_root\(STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_name\(STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_list\(STR, STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_text\(STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_open\(STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_xlist\(STR, STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


##### STR xml\_xelement\(STR, STR\)
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


### special variables
> fillColor=`#5BEBA4`,leftSide=`true`


#### jcp\.version
> fillColor=`#5BEBA4`


##### preprocessor version

##### read only
> fillColor=`#FF0000`,textColor=`#FFFFFF`


#### jcp\.src\.path
> fillColor=`#5BEBA4`,leftSide=`true`


##### full path to preprocessing source file

##### \_\_file\_\_

##### read only
> fillColor=`#FF0000`,leftSide=`true`,textColor=`#FFFFFF`


#### jcp\.src\.dir
> fillColor=`#5BEBA4`,leftSide=`true`


##### Preprocessing file folder

##### \_\_filefolder\_\_

##### read only
> fillColor=`#FF0000`,textColor=`#FFFFFF`


#### jcp\.src\.name
> fillColor=`#5BEBA4`,leftSide=`true`


##### Preprocessing file name

##### \_\_filename\_\_

##### read only
> fillColor=`#FF0000`,leftSide=`true`,textColor=`#FFFFFF`


#### \_\_line\_\_
> fillColor=`#5BEBA4`,leftSide=`true`


##### number of preprocessing line

##### read only
> fillColor=`#FF0000`,leftSide=`true`,textColor=`#FFFFFF`


#### jcp\.dst\.path
> fillColor=`#5BEBA4`,leftSide=`true`


##### destination file path

##### read only
> fillColor=`#FF0000`,leftSide=`true`,textColor=`#FFFFFF`


#### jcp\.dst\.dir
> fillColor=`#5BEBA4`,leftSide=`true`


##### destination folder

#### jcp\.dst\.name
> fillColor=`#5BEBA4`,leftSide=`true`


##### destination file name

#### \_\_time\_\_
> fillColor=`#5BEBA4`,leftSide=`true`


##### current time<br/>HH:mm:ss

#### \_\_date\_\_
> fillColor=`#5BEBA4`,leftSide=`true`


##### current date<br/>MMM dd yyyy

#### \_\_timestamp\_\_
> fillColor=`#5BEBA4`,leftSide=`true`


##### source file timestamp<br/>EEE MMM dd HH:mm:ss yyyy
