buildscript {
    repositories {
        flatDir dirs: "../../jcp/target"
    }
    dependencies {
        classpath "com.igormaznitsa:jcp:$jcp_test_version"
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.igormaznitsa.jcp'

application {
    mainClass = 'hello.world'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.igormaznitsa.jcp.it.gradle.MainTwo'
        )
    }
}


preprocess {
    sources = sourceSets.main.java.srcDirs
    allowWhitespaces = true
    eol = '\r\n'
    keepAttributes = true
    sourceEncoding = 'UTF-8'
    targetEncoding = 'UTF-8'
    ignoreMissingSources = false
    excludeExtensions = ['txt', 'xml']
    fileExtensions = ['java']
    unknownVarAsFalse = false
    dryRun = false
    verbose = true
    allowBlocks = true
    clearTarget = true
    careForLastEol = true
    keepComments = 'remove_jcp_only'
    excludeFolders = ['**/some1', '**/some2']
    configFiles = ['./configFile.txt']
    keepLines = true
    allowWhitespaces = true
    preserveIndents = true
    dontOverwriteSameContent = false
    actionPreprocessorExtension = "com.igormaznitsa.jcp.extension.LogPreprocessorExtension"
    vars = ['some.test.global': 'Some Test Global Value']
}
task(changeSourceFolder) {
    sourceSets.main.java.srcDirs = [preprocess.target]
}.dependsOn preprocess


compileJava.dependsOn preprocess

gradle.buildFinished {
    println("Incoming preprocess files: " + preprocess.incomingFiles.size())
    println("Resulted preprocess files: " + preprocess.outcomingFiles.size())
}